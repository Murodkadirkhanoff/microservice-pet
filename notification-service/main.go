package main

import (
	"log"
	"net/http"
	"strings"

	"github.com/gin-gonic/gin"
	"github.com/golang-jwt/jwt/v5"
)

// üîë –°–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á (–¥–æ–ª–∂–µ–Ω —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å Laravel Passport)
var publicKey = []byte(`-----BEGIN PUBLIC KEY-----
MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAm2QDKVyEAR38zzBtI8mB
KET6gc/SfLkXrS1NcFTX0LhiNZVSbP++DE/RPOVm9gUtMOXGN7qiCSxOR6nmNstY
cCvq1xIodCtD4C8ToOyntf6e8hpW9TGz4JNBzaU7g3F43rfF+Xe8sRnl+xaxKqjI
F076Co73tKZY3AeYNaIFZ5Lv2xMZpbqlwcU3j2Pj/GKM9xeZbFuFki/H5XI2INkx
Xr0Lsm32lwwb5vBl+m1rXqgqCQu2qYcqxiorlhIopi6BiXOBsV/1PTNqGW555/x9
VhVispFP7hV5HTtgHbiAkCwI9RC+JTul3oIfPfawGwxM6UpRIOMb7kqW6MKIw3Fj
C+VvSpJ/P/FYhbNVuko8JwJj2mvC96RrMJ9OAlz2w2ffaHRswRr4QESbHOm2I9HH
aoLTHYTZKzbp4UwUt4KT6zREi+A2MDN+XZ3UxgCbOiiLT+oEaECO2W6X2Lf5wKIc
bV1HBuLUybqSZ7UW8WZADtRKx0M0Qt0+cW+3ZntE6FiNTLqXUnE8x0GjgU50MSgi
sSrm5WPBWpEfAsqrjcW2axx3Q/KryzvwCsVVwhL3mtVsN24hDFfUp5Wf98SEPgbV
qjS2ZJdv5pnSwWfrE+EPfbuSVFhobtt7wPsLPpwEOoOwm2rnxFkhjZiO8Z716FBx
nkMotuGxvKK8HoK5AvlVBN0CAwEAAQ==
-----END PUBLIC KEY-----`)

// üìå –§—É–Ω–∫—Ü–∏—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ç–æ–∫–µ–Ω–∞
func validateToken(tokenString string) (*jwt.Token, error) {
	return jwt.Parse(tokenString, func(token *jwt.Token) (interface{}, error) {
		// –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á RSA –≤–º–µ—Å—Ç–æ HMAC
		parsedKey, err := jwt.ParseRSAPublicKeyFromPEM(publicKey)
		if err != nil {
			return nil, err
		}
		return parsedKey, nil
	})
}

// üöÄ Middleware –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ JWT
func AuthMiddleware() gin.HandlerFunc {
	return func(c *gin.Context) {
		authHeader := c.GetHeader("Authorization")

		if authHeader == "" {
			c.JSON(http.StatusUnauthorized, gin.H{"error": "–ù–µ—Ç —Ç–æ–∫–µ–Ω–∞"})
			c.Abort()
			return
		}

		// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç "Bearer <token>"
		tokenParts := strings.Split(authHeader, " ")
		if len(tokenParts) != 2 || tokenParts[0] != "Bearer" {
			c.JSON(http.StatusUnauthorized, gin.H{"error": "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ç–æ–∫–µ–Ω–∞"})
			c.Abort()
			return
		}

		// –í–∞–ª–∏–¥–∞—Ü–∏—è —Ç–æ–∫–µ–Ω–∞
		token, err := validateToken(tokenParts[1])
		if err != nil || !token.Valid {
			c.JSON(http.StatusUnauthorized, gin.H{"error": "–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω"})
			c.Abort()
			return
		}

		// –ï—Å–ª–∏ –≤—Å—ë –æ–∫, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
		c.Next()
	}
}

func main() {
	// –°–æ–∑–¥–∞—ë–º —Å–µ—Ä–≤–µ—Ä Gin
	r := gin.Default()

	// –û—Ç–∫—Ä—ã—Ç—ã–π –º–∞—Ä—à—Ä—É—Ç (–±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏)
	r.GET("/public", func(c *gin.Context) {
		c.JSON(http.StatusOK, gin.H{"message": "–û—Ç–∫—Ä—ã—Ç—ã–π –º–∞—Ä—à—Ä—É—Ç, –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–µ –Ω—É–∂–Ω–∞"})
	})

	// –ó–∞—â–∏—â—ë–Ω–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç
	r.GET("/secure", AuthMiddleware(), func(c *gin.Context) {
		c.JSON(http.StatusOK, gin.H{"message": "–î–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à—ë–Ω! –¢–æ–∫–µ–Ω –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω."})
	})

	// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
	log.Println("üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ :8081")
	log.Fatal(r.Run(":8081"))
}
