services:
  traefik:
    image: traefik:v2.10
    container_name: traefik
    restart: always
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"  # Админка Traefik (можно убрать)
    networks:
      - app-net
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   container_name: frontend
  #   restart: always
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.vue.rule=PathPrefix(`/`)"
  #     - "traefik.http.routers.vue.entrypoints=web"
  #   networks:
  #     - app-net
  # notification-service:
  #   build:
  #     context: ./notification-service
  #     dockerfile: Dockerfile
  #   container_name: notification-service
  #   ports:  
  #     - "8081:8081"
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.notification.rule=PathPrefix(`/notification-service`)"
  #     - "traefik.http.middlewares.notification-strip.stripprefix.prefixes=/notification-service"
  #     - "traefik.http.routers.notification.middlewares=notification-strip"
  #     - "traefik.http.services.notification.loadbalancer.server.port=8081"
  #   networks:
  #     - app-net

  # user-service:
  #     build:
  #       context: ./user-service
  #       dockerfile: Dockerfile
  #     container_name: user-service
  #     depends_on:
  #       - postgres_user_service
  #     labels:
  #       - "traefik.enable=true"
  #       - "traefik.http.routers.user.rule=PathPrefix(`/user-service`)"
  #       - "traefik.http.middlewares.user-strip.stripprefix.prefixes=/user-service"
  #       - "traefik.http.routers.user.middlewares=user-strip"
  #       - "traefik.http.services.user.loadbalancer.server.port=50051"
  #       - "traefik.http.routers.user.tls=true"
  #       - "traefik.http.services.user.loadbalancer.server.scheme=h2c"
  #     networks:
  #       - app-net
  #     ports:
  #       - "50051:50051"

  postgres_user_service:
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: user_service
    # ports:
    #   - "5432:5432"
    volumes:
      - user_service_data:/var/lib/postgresql/data
    networks:
      - app-net
  
  core-service:
    build:
      context: ./core-service
      dockerfile: Dockerfile
    container_name: core-service
    volumes:
      - ./core-service:/var/www
    networks:
      - app-net

  nginx-core:
    image: nginx:latest
    container_name: nginx-core
    restart: always
    volumes:
      - ./core-service/docker/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./core-service:/var/www
      - ./core-service/docker/logs/nginx:/var/log/nginx
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.core.rule=PathPrefix(`/`)"
     # - "traefik.http.middlewares.core-strip.stripprefix.prefixes=/core"
     # - "traefik.http.routers.core.middlewares=core-strip"
      - "traefik.http.services.core.loadbalancer.server.port=80"
    depends_on:
      - core-service
    networks:
      - app-net

networks:
  app-net:
    driver: bridge

volumes:
  user_service_data: